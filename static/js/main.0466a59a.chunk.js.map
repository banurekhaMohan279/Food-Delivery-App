{"version":3,"sources":["components/App.js","actions/cities.js","entities/getCitiesApi.js","components/AppHeader.js","components/location.js","entities/restaurantsApi.js","entities/restaurantDetailsApi.js","components/restaurants.js","actions/restaurants.js","actions/restaurantDetails.js","components/restaurantDetails.js","routes.js","reducers/restaurantsReducer.js","reducers/getCitiesReducer.js","reducers/restaurantDetailsReducer.js","reducers/rootReducer.js","reportWebVitals.js","index.js"],"names":["App","console","log","history","useHistory","className","onSubmit","event","preventDefault","push","type","placeholder","getCities","location","dispatch","fetch","method","headers","then","response","json","getCitiesApi","error","getCitiesSuccess","AppHeader","onClick","Location","props","state","locationSubmit","bind","locationChange","this","loc","target","value","setState","onChange","React","Component","withRouter","connect","cities","getCitiesReducer","res_id","Restaurants","getRestaurantDetails","restaurantsApi","getAllRestaurants","msg","getRestaurantsSuccess","restaurantDetailsApi","getRestaurantDetailsSuccess","restaurants","map","item","index","e","restaurant","R","src","thumb","alt","name","user_rating","aggregate_rating","restaurantsReducer","RestaurantDetails","restaurantDetails","featured_image","timings","cuisines","phone_numbers","address","establishment","restaurantDetailsReducer","Routes","exact","path","initialState","rootReducer","combineReducers","action","Object","assign","citie","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0466a59a.chunk.js","sourcesContent":["import {useHistory} from 'react-router-dom';\n\nfunction App() {\n  console.log(\"in appp..\")\n  let history = useHistory();\n\n  function goToHomePage(event){\n    event.preventDefault();\n    history.push('/Location');\n  }\n\n  return (\n    <div className=\"App LoginPage\">\n      <section className=\"loginContainer\">\n        <div className=\"login\">\n          <header>Food Delivery App Login</header>\n          <form onSubmit = {goToHomePage}>\n              <input type=\"text\" placeholder=\"User Name\"/>\n              <input type=\"password\" placeholder=\"Password\"/>\n              <input type=\"submit\"/>\n          </form>\n          </div>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","import getCitiesApi from '../entities/getCitiesApi.js';\n\nexport default function getCities(location){\n  return dispatch => {\n    return getCitiesApi(location)\n    .then(response => {\n      if(response.error){\n        dispatch(getCitiesFailure('Get cities failure'));\n      }\n      else{\n        dispatch(getCitiesSuccess(response))\n      }\n    });\n  }\n}\n\nfunction getCitiesSuccess(response){\n  return {type:'GET_CITIES_SUCCESS', response};\n}\n\nfunction getCitiesFailure(error){\n  return {type:'GET_CITIES_FAILURE', error};\n}\n","export default function getCitiesApi(location){\n    return fetch ('https://developers.zomato.com/api/v2.1/locations?q='+location,\n                  {\n                    method: 'GET',\n                    headers: {\"user-key\":\"4b22cef4949b6dd368a5b9a32cb83fbd\"}\n                  })\n                  .then(response => response.json());\n}\n","import {useHistory} from 'react-router-dom';\n\nexport default function AppHeader (){\n\n  let history = useHistory();\n\n  function gotoHome(){\n    history.push('/Location');\n  }\n\n  return (\n    <header className = \"AppHeader\" onClick = {gotoHome}>\n      Hunger Buddy\n      <span> A Foodie's Best Friend </span>\n    </header>\n  )\n}\n","import React from 'react';\nimport getCities from '../actions/cities';\nimport AppHeader from './AppHeader';\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router-dom';\n\nclass Location extends React.Component{\n  constructor(props){\n      super(props);\n      this.state = {location : ''};\n      this.locationSubmit = this.locationSubmit.bind(this);\n      this.locationChange = this.locationChange.bind(this);\n  }\n\n  locationSubmit(event) {\n    event.preventDefault();\n    this.props.dispatch(getCities(this.state.location)).then( () => {this.props.history.push('/Restaurants')} );\n  }\n\n  locationChange(event){\n    let loc = event.target.value;\n    this.setState ({location:loc});\n  }\n\n  render(){\n    return(\n      <div className = \"homePage\">\n        <AppHeader/>\n        <form onSubmit = {this.locationSubmit}>\n          <input type = \"text\" className = \"cityName\" placeholder = \"Enter your location..\" onChange = {this.locationChange}/>\n          <input type = \"submit\" value = \"Go\"/>\n        </form>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state){\n  return {\n    cities : state.getCitiesReducer.cities\n  }\n}\n\nexport default withRouter(connect(mapStateToProps)(Location));\n","class restaurantsApi {\n\n   getAllRestaurants(){\n    return fetch('https://developers.zomato.com/api/v2.1/search?entity_id=7&entity_type=city&category=6',\n                {\n                  method: 'GET',\n                  headers: {\"user-key\" : \"4b22cef4949b6dd368a5b9a32cb83fbd\"}\n                })\n    .then(response => response.json());\n  }\n\n}\n\nexport default new restaurantsApi(); // why is new used here??\n","class restaurantDetailsApi {\n\n   getRestaurantDetails(res_id){\n    return fetch('https://developers.zomato.com/api/v2.1/restaurant?res_id='+res_id,\n                {\n                  method: 'GET',\n                  headers: {\"user-key\" : \"4b22cef4949b6dd368a5b9a32cb83fbd\"}\n                })\n    .then(response => response.json());\n  }\n\n}\n\nexport default new restaurantDetailsApi();\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {getAllRestaurants} from '../actions/restaurants';\nimport {getRestaurantDetails} from '../actions/restaurantDetails';\nimport AppHeader from './AppHeader';\nimport {withRouter} from 'react-router-dom';\n\nclass Restaurants extends React.Component{\n  constructor(props){\n    super(props);\n    this.getRestaurantDetails = this.getRestaurantDetails.bind(this);\n  }\n\n  componentDidMount(){\n    this.props.dispatch(getAllRestaurants());\n  }\n\n  getRestaurantDetails(res_id){\n      this.props.dispatch(getRestaurantDetails(res_id)).then (() => {\n        this.props.history.push('/RestaurantDetails');\n      });\n  }\n\n  render(){\n    let restaurants = this.props.restaurants && this.props.restaurants.restaurants;\n    return(\n      <div className = \"retaurantsPage\">\n          <AppHeader/>\n          <div className = \"restaurantList\">\n            {restaurants &&\n              restaurants.map ( (item,index) => {\n                return  (\n                  <div className = \"restaurant\" key = {\"restaurant\"+index}\n                  onClick = {(e) => this.getRestaurantDetails(item.restaurant.R.res_id)}>\n                    <img src = {item.restaurant.thumb} alt = {item.restaurant.name} className = \"restaurantThumbNail\" />\n                    <h4 className = \"restaurantName\"> {item.restaurant.name} </h4>\n                    <span>☆{item.restaurant.user_rating.aggregate_rating}</span>\n                  </div>\n                );\n              })\n            }\n          </div>\n      </div>\n\n    )\n  }\n\n}\n\nfunction mapStateToProps(state){\n  return{\n    restaurants : state.restaurantsReducer.restaurants,\n    cities: state.getCitiesReducer.cities\n  }\n}\n\nexport default withRouter(connect(mapStateToProps)(Restaurants));\n","import restaurantsApi from '../entities/restaurantsApi.js';\n\nexport function getAllRestaurants() {\n  return dispatch => { //\n    return restaurantsApi.getAllRestaurants()\n    .then(response => {\n      if(response.error) {\n        dispatch(getRestaurantsFailure('Get Restaurants Failure'));\n      }\n      else {\n        dispatch(getRestaurantsSuccess(response));\n      }\n    })\n  }\n}\n\nfunction getRestaurantsFailure(msg){\n  return {type: 'GET_RESTAURANTS_FAILURE', msg};\n}\n\nfunction getRestaurantsSuccess(response){\n  return {type : 'GET_RESTAURANTS_SUCCESS', response};\n}\n","import restaurantDetailsApi from '../entities/restaurantDetailsApi.js';\n\nexport function getRestaurantDetails(res_id) {\n  return dispatch => { //\n    return restaurantDetailsApi.getRestaurantDetails(res_id)\n    .then(response => {\n      if(response.error) {\n        dispatch(getRestaurantDetailsFailure('Get Restaurant Details Failure'));\n      }\n      else {\n        dispatch(getRestaurantDetailsSuccess(response));\n      }\n    })\n  }\n}\n\nfunction getRestaurantDetailsFailure(msg){\n  return {type: 'GET_RESTAURANT_DETAILS_FAILURE', msg};\n}\n\nfunction getRestaurantDetailsSuccess(response){\n  return {type : 'GET_RESTAURANT_DETAILS_SUCCESS', response};\n}\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport AppHeader from './AppHeader';\n\n// on refresh needs another retsuarntdetails in compoentdidMount\nclass RestaurantDetails extends React.Component{\n\n  render(){\n    let restaurantDetails = this.props.restaurantDetails;\n    return(\n      <div className = \"RestaurantDetails\">\n        <AppHeader/>\n\n        <section className = \"img-section\">\n          <img src = {restaurantDetails.featured_image}/>\n        </section>\n\n        <section className = \"details-section\">\n          <h4> {restaurantDetails.name} </h4>\n          <span> {restaurantDetails.timings} </span>\n          <span> {restaurantDetails.cuisines} </span>\n          <span> {restaurantDetails.phone_numbers} </span>\n          <span> {restaurantDetails.location.address} </span>\n          <div className = \"rest-types\">\n            {restaurantDetails.establishment.map\n              ((item) => <span className = \"rest-type\" key = \"index\"> {item} </span>) }\n          </div>\n        </section>\n\n        <section className = \"reviews-section\">\n        </section>\n      </div>\n    )\n  }\n\n}\n\nfunction mapStateToProps(state){\n  return {\n    restaurantDetails : state.restaurantDetailsReducer.restaurantDetails\n  }\n}\n\nexport default connect(mapStateToProps)(RestaurantDetails);\n","import React from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\n\nimport App from './components/App';\nimport Location from './components/location.js';\nimport Restaurants from './components/restaurants.js';\nimport RestaurantDetails from './components/restaurantDetails.js';\n\nexport default function Routes() {\n  return(\n      <Router>\n        <Switch>\n          <Route exact path = '/Food-Delivery-App'>\n            <App />\n          </Route>\n          <Route path = '/Location'>\n            <Location />\n          </Route>\n          <Route path = '/Restaurants'>\n            <Restaurants />\n          </Route>\n          <Route path = '/RestaurantDetails'>\n            <RestaurantDetails />\n          </Route>\n        </Switch>\n      </Router>\n  )\n}\n","const initialState = {\n  restaurants:null,\n  error:null\n}\n\nexport default function restaurantsReducer ( state = initialState, action ){\n  switch(action.type){\n    case 'GET_RESTAURANTS_FAILURE':\n      return  Object.assign ({}, state, {restaurants :  null, error: action.msg}); // assign to update state\n    case 'GET_RESTAURANTS_SUCCESS':\n      return Object.assign ({}, state, {restaurants : action.response, error: null });\n    default:\n      return state;\n  }\n}\n","const initialState = {cities:{}, error:null}\n\nexport default function getCitiesReducer (state = initialState, action){\n  switch(action.type){\n    case 'GET_CITIES_SUCCESS':\n      return Object.assign (state, {cities : action.response , error: null});\n    case 'GET_CITIES_FAILURE':\n      return Object.assign (state, {citie : {}, error: action.error});\n    default:\n      return state;\n  }\n}\n","const initialState = {\n  restaurantDetails:null,\n  error:null\n}\n\nexport default function restaurantDetailsReducer ( state = initialState, action ){\n  switch(action.type){\n    case 'GET_RESTAURANT_DETAILS_FAILURE':\n      return  Object.assign ({}, state, {restaurantDetails :  null, error: action.msg}); // assign to update state\n    case 'GET_RESTAURANT_DETAILS_SUCCESS':\n      return Object.assign ({}, state, {restaurantDetails : action.response, error: null });\n    default:\n      return state;\n  }\n}\n","import {combineReducers} from 'redux';\nimport restaurantsReducer from './restaurantsReducer';\nimport getCitiesReducer from './getCitiesReducer';\nimport restaurantDetailsReducer from './restaurantDetailsReducer';\n\nconst rootReducer = combineReducers({\n  restaurantsReducer,\n  getCitiesReducer,\n  restaurantDetailsReducer\n});\n\nexport default rootReducer;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Routes from './routes';\nimport {Provider} from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\n\nimport './index.css';\nimport './App.css';\n\nimport reportWebVitals from './reportWebVitals';\n\nconst store = createStore (rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store = {store} >\n    <React.StrictMode>\n      <Routes/>\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}