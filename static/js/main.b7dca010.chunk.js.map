{"version":3,"sources":["components/AppHeader.js","components/App.js","actions/cities.js","entities/getCitiesApi.js","components/location.js","routes.js","reducers/restaurantsReducer.js","reducers/getCitiesReducer.js","reducers/restaurantDetailsReducer.js","reducers/rootReducer.js","reportWebVitals.js","index.js"],"names":["AppHeader","history","useHistory","className","onClick","push","App","console","log","onSubmit","event","preventDefault","type","placeholder","getCities","location","dispatch","fetch","method","headers","then","response","json","getCitiesApi","error","getCitiesSuccess","Location","useState","setLocation","useDispatch","onChange","loc","target","value","Restaurants","lazy","RestaurantDetails","Routes","fallback","exact","path","component","initialState","restaurants","cities","restaurantDetails","rootReducer","combineReducers","restaurantsReducer","state","action","Object","assign","msg","concat","getCitiesReducer","restaurantDetailsReducer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7dca010.chunk.js","sourcesContent":["import {useHistory} from 'react-router-dom';\n\nexport default function AppHeader (){\n\n  let history = useHistory();\n\n  function gotoHome(){\n    history.push('/Location');\n  }\n\n  return (\n    <header className = \"AppHeader\" onClick = {gotoHome}>\n      Hunger Buddy\n      <span> A Foodie's Best Friend </span>\n    </header>\n  )\n}\n","import {useHistory} from 'react-router-dom';\n\nfunction App() {\n  console.log(\"in appp..\")\n  let history = useHistory();\n\n  function goToHomePage(event){\n    event.preventDefault();\n    history.push('/Location');\n  }\n\n  return (\n    <div className=\"App LoginPage\">\n      <section className=\"loginContainer\">\n        <div className=\"login\">\n          <header>Food Delivery App Login</header>\n          <form onSubmit = {goToHomePage}>\n              <input type=\"text\" placeholder=\"User Name\"/>\n              <input type=\"password\" placeholder=\"Password\"/>\n              <input type=\"submit\"/>\n          </form>\n          </div>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","import getCitiesApi from '../entities/getCitiesApi.js';\n\nexport default function getCities(location){\n  return dispatch => {\n    return getCitiesApi(location.location)\n    .then(response => {\n      if(response.error){\n        dispatch(getCitiesFailure('Get cities failure'));\n      }\n      else{\n        dispatch(getCitiesSuccess(response))\n      }\n    });\n  }\n}\n\nfunction getCitiesSuccess(response){\n  return {type:'GET_CITIES_SUCCESS', response};\n}\n\nfunction getCitiesFailure(error){\n  return {type:'GET_CITIES_FAILURE', error};\n}\n","export default function getCitiesApi(location){\n    return fetch ('https://developers.zomato.com/api/v2.1/locations?query='+location,\n                  {\n                    method: 'GET',\n                    headers: {\"user-key\":\"4b22cef4949b6dd368a5b9a32cb83fbd\"}\n                  })\n                  .then(response => response.json());\n}\n","/** Restructuring the document for React Hooks ***/\nimport React, {useState} from 'react';\nimport getCities from '../actions/cities';\nimport AppHeader from './AppHeader';\nimport {connect, useDispatch} from 'react-redux';\nimport {useHistory} from 'react-router-dom';\n\nfunction Location() {\n  const [location, setLocation] = useState('');\n  let history = useHistory();\n  let dispatch = useDispatch();\n\n  function locationSubmit(event) {\n    event.preventDefault();\n    dispatch(getCities({location})).then( () => {history.push('/Restaurants')} );\n  }\n\n  function locationChange(event){\n    let loc = event.target.value;\n    setLocation(loc);\n  }\n\n    return(\n      <div className = \"homePage\">\n        <AppHeader/>\n        <form onSubmit = {locationSubmit}>\n          <input type = \"text\" className = \"cityName\" placeholder = \"Enter your location..\"\n          onChange = {locationChange}/>\n          <input type = \"submit\" value = \"Go\"/>\n        </form>\n      </div>\n    )\n}\n\n\nexport default Location;\n","import React, { Suspense, lazy } from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\n\nimport App from './components/App';\nimport Location from './components/location.js';\n//import Restaurants from './components/restaurants.js';\n//import RestaurantDetails from './components/restaurantDetails.js';\nconst Restaurants = lazy(() => import ('./components/restaurants.js'));\nconst RestaurantDetails = lazy(() => import ('./components/restaurantDetails.js'));\n\nexport default function Routes() {\n  return(\n      <Router>\n        <Suspense fallback = {<div> Loading... </div>}>\n            <Switch>\n              <Route exact path = '/Hunger-Buddy'>\n                <App />\n              </Route>\n              <Route path = '/Location'>\n                <Location />\n              </Route>\n              <Route path = '/Restaurants' component = {Restaurants} >\n              </Route>\n              <Route path = '/RestaurantDetails' component = {RestaurantDetails}>\n              </Route>\n            </Switch>\n        </Suspense>\n      </Router>\n  )\n}\n","const initialState = {\n  restaurants:[],\n  error:null\n}\n\nexport default function restaurantsReducer ( state = initialState, action ){\n  switch(action.type){\n    case 'GET_RESTAURANTS_FAILURE':\n      return  Object.assign ({}, state, {restaurants :  null, error: action.msg}); // assign to update state\n    case 'GET_RESTAURANTS_SUCCESS':\n      return Object.assign ({}, state, {restaurants : state.restaurants.concat(action.response.restaurants), error: null });\n    default:\n      return state;\n  }\n}\n","const initialState = {cities:{}, error:null}\n\nexport default function getCitiesReducer (state = initialState, action){\n  switch(action.type){\n    case 'GET_CITIES_SUCCESS':\n      return Object.assign (state, {cities : action.response , error: null});\n    case 'GET_CITIES_FAILURE':\n      return Object.assign (state, {cities : {}, error: action.error});\n    default:\n      return state;\n  }\n}\n","const initialState = {\n  restaurantDetails:null,\n  error:null\n}\n\nexport default function restaurantDetailsReducer ( state = initialState, action ){\n  switch(action.type){\n    case 'GET_RESTAURANT_DETAILS_FAILURE':\n      return  Object.assign ({}, state, {restaurantDetails :  null, error: action.msg}); // assign to update state\n    case 'GET_RESTAURANT_DETAILS_SUCCESS':\n      return Object.assign ({}, state, {restaurantDetails : action.response, error: null });\n    default:\n      return state;\n  }\n}\n","import {combineReducers} from 'redux';\nimport restaurantsReducer from './restaurantsReducer';\nimport getCitiesReducer from './getCitiesReducer';\nimport restaurantDetailsReducer from './restaurantDetailsReducer';\n\nconst rootReducer = combineReducers({\n  restaurantsReducer,\n  getCitiesReducer,\n  restaurantDetailsReducer\n});\n\nexport default rootReducer;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Routes from './routes';\nimport {Provider} from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\n\nimport './index.css';\nimport './App.css';\n\nimport reportWebVitals from './reportWebVitals';\n\nconst store = createStore (rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store = {store} >\n    <React.StrictMode>\n      <Routes/>\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}