{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","entities/restaurantsApi.js","actions/restaurants.js","entities/restaurantDetailsApi.js","components/restaurants.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","city","page","isInit","fetch","method","headers","then","response","json","getAllRestaurants","dispatch","restaurantsApi","error","type","msg","getInitRestaurantsSuccess","console","log","getRestaurantsSuccess","res_id","Restaurants","useDispatch","history","useHistory","useState","setPage","restaurants","useSelector","state","restaurantsReducer","getCitiesReducer","cities","getRestaurantDetails","push","useEffect","observer","IntersectionObserver","handleObserver","root","rootMargin","threshold","loader","current","observe","divStyle","height","useRef","entities","isIntersecting","className","AppHeader","style","maxWidth","margin","map","item","index","onClick","e","restaurant","R","src","thumb","alt","name","user_rating","aggregate_rating","ref"],"mappings":"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","file":"static/js/4.b1063892.chunk.js","sourcesContent":["export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","class restaurantsApi {\n\n   getAllRestaurants(city,page,isInit){\n    const start = page * 20;\n    return fetch('https://developers.zomato.com/api/v2.1/search?entity_id='+city+'&entity_type=city&start='+start+'&count=20&category=6',\n                {\n                  method: 'GET',\n                  headers: {\"user-key\" : \"4b22cef4949b6dd368a5b9a32cb83fbd\"}\n                })\n    .then(response => response.json());\n  }\n\n}\n\nexport default new restaurantsApi(); // why is new used here??\n","import restaurantsApi from '../entities/restaurantsApi.js';\n\nexport function getAllRestaurants(city,page,isInit) {\n  return dispatch => { //\n    return restaurantsApi.getAllRestaurants(city,page,isInit)\n    .then(response => {\n      if(response.error) {\n        dispatch(getRestaurantsFailure('Get Restaurants Failure'));\n      }\n      else if(isInit === 'initLoad'){\n        dispatch(getInitRestaurantsSuccess(response));\n        console.log(\"init restaurants\");\n      }\n      else{\n        dispatch(getRestaurantsSuccess(response));\n        console.log(\"subsequent restaurants load\");\n      }\n    })\n  }\n}\n\nfunction getRestaurantsFailure(msg){\n  return {type: 'GET_RESTAURANTS_FAILURE', msg};\n}\n\nfunction getRestaurantsSuccess(response){\n  return {type : 'GET_RESTAURANTS_SUCCESS', response};\n}\n\nfunction getInitRestaurantsSuccess(response){\n  return {type : 'GET_INIT_RESTAURANTS_SUCCESS', response};\n}\n","class restaurantDetailsApi {\n\n   getRestaurantDetails(res_id){\n    return fetch('https://developers.zomato.com/api/v2.1/restaurant?res_id='+res_id,\n                {\n                  method: 'GET',\n                  headers: {\"user-key\" : \"4b22cef4949b6dd368a5b9a32cb83fbd\"}\n                })\n    .then(response => response.json());\n  }\n\n}\n\nexport default new restaurantDetailsApi();\n","import React, {useEffect, useState, useRef} from 'react';\nimport { useDispatch, useSelector} from 'react-redux';\nimport {getAllRestaurants} from '../actions/restaurants';\nimport {getRestaurantDetails} from '../actions/restaurantDetails';\nimport AppHeader from './AppHeader';\nimport {useHistory} from 'react-router-dom';\n\nfunction Restaurants() {\n  let dispatch = useDispatch();\n  let history = useHistory();\n  const [page, setPage] = useState(0);\n  let restaurants = useSelector(state => state.restaurantsReducer.restaurants);\n  let city = useSelector(state => state.getCitiesReducer.cities[\"location_suggestions\"][0][\"entity_id\"]);\n\n  useEffect(() =>{\n    dispatch(getAllRestaurants(city,page,'initLoad')).then(()=>{ // to update page number after first load, else page number updates of blank loading div\n      var options = {\n         root: null,\n         rootMargin: \"20px\",\n         threshold: 1.0\n      };\n     // initialize IntersectionObserver and attaching to Load More div\n      const observer = new IntersectionObserver(handleObserver, options);\n      console.log(\"loader\",loader,loader.current);\n      if (loader.current) {\n         observer.observe(loader.current)\n      }\n    }); // overwrite restaurants state on load\n  });\n\n  function getRestaurantDetails(res_id){\n      dispatch(getRestaurantDetails(res_id)).then (() => {\n        history.push('/RestaurantDetails');\n      });\n  }\n\n  /**** Infinite Scroll ******/\n  // styling post container\n  const divStyle = {\n      height: '250px'\n  };\n\n  // styling container wrapper\n  const containerStyle = {\n      maxWidth: '1280px',\n      margin: '0 auto'\n  }\n  // add loader refrence\n  const loader = useRef(null);\n\n  /*useEffect(() => {\n       var options = {\n          root: null,\n          rootMargin: \"20px\",\n          threshold: 1.0\n       };\n      // initialize IntersectionObserver and attaching to Load More div\n       const observer = new IntersectionObserver(handleObserver, options);\n       console.log(\"loader\",loader,loader.current);\n       if (loader.current) {\n          observer.observe(loader.current)\n       }\n  }, []);*/\n\n  // Similar to componentDidUpdate - updates whenever page state is changed / dispatch can also be added inside setTimeout\n  useEffect(() => {\n      console.log(\"componentDidUpdate\",page);\n      dispatch(getAllRestaurants(city,page,'notInitLoad')); // concat restaurants state on subsequent loads\n  }, [page]);\n\n  // here we handle what happens when user scrolls to Load More div - in this case we just update page variable\n  const handleObserver = (entities) => {\n      const target = entities[0]; // target is the loading div\n      if (target.isIntersecting) {\n          //setTimeout (() => setPage((page) => page + 1),2000);\n          setPage((page) => page + 1);\n      }\n  }\n\n  return(\n      <div className = \"retaurantsPage\">\n          <AppHeader/>\n          <div className = \"restaurantList\" style ={containerStyle}>\n            {restaurants &&\n              restaurants.map ( (item,index) => {\n                return  (\n                  <div className = \"restaurant\" key = {\"restaurant\"+index} style = {divStyle}\n                  onClick = {(e) => getRestaurantDetails(item.restaurant.R.res_id)}>\n                    <img src = {item.restaurant.thumb} alt = {item.restaurant.name} className = \"restaurantThumbNail\" />\n                    <h4 className = \"restaurantName\"> {item.restaurant.name} </h4>\n                    <span>â˜†{item.restaurant.user_rating.aggregate_rating}</span>\n                  </div>\n                );\n              })\n            }\n          </div>\n          <div className=\"loading\" ref={loader}>\n                    <h2>Loading...</h2>\n          </div>\n      </div>\n    )\n}\n\nexport default Restaurants;\n"],"sourceRoot":""}